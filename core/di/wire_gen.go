// Code generated by Wire. DO NOT EDIT.

//go:generate go run github.com/google/wire/cmd/wire
//go:build !wireinject
// +build !wireinject

package di

import (
	"github.com/gin-gonic/gin"
	"github.com/samriddhadev/go-acme-flights/api/controller"
	"github.com/samriddhadev/go-acme-flights/api/middleware"
	"github.com/samriddhadev/go-acme-flights/api/router"
	"github.com/samriddhadev/go-acme-flights/api/validation"
	"github.com/samriddhadev/go-acme-flights/core/config"
	"github.com/samriddhadev/go-acme-flights/core/logger"
	"github.com/samriddhadev/go-acme-flights/repository"
	"github.com/samriddhadev/go-acme-flights/service"
)

// Injectors from wire.go:

func InitializeRouter(cfg *config.Config, ctx *gin.Engine) router.Router {
	acmeLogger := logger.NewAcmeLogger(cfg)
	errorMiddleware := middleware.NewErrorMiddleware(acmeLogger)
	requestIdMiddleware := middleware.NewRequestIdMiddleware(acmeLogger)
	validator := validation.NewValidator(acmeLogger)
	acmeFlightRepository := repository.NewAcmeFlightRepository(acmeLogger)
	acmeFlightService := service.NewAcmeFlightService(acmeLogger, acmeFlightRepository)
	acmeFlightController := controller.NewAcmeFlightController(acmeLogger, validator, acmeFlightService)
	routerRouter := router.NewRouter(cfg, ctx, acmeLogger, errorMiddleware, requestIdMiddleware, acmeFlightController)
	return routerRouter
}
